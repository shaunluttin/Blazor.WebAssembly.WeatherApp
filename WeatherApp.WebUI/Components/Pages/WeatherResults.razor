@page "/weather/{CityName}/{CityId:int}"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using WeatherApp.WebUI.DTOs
@using WeatherApp.WebUI.Services
@using WeatherApp.WebUI.Components.NonPages
@inject IWeatherService WeatherService

<PageTitle>Weather for @CityName</PageTitle>

<h1>Weather for @CityName</h1>

<FavoritesButton CityName="@CityName" CityId="@CityId" />

<CurrentWeather WeatherDescription="@currentWeather" />

<WeatherForecast ForecastDays="@forecastDays" />

@code {
    [Parameter]
    public required string CityName {get; set;}

    [Parameter]
    public required int CityId {get; set;}

    private WeatherDescriptionDTO? currentWeather;

    private IEnumerable<ForecastDayDTO>? forecastDays;

    protected override async Task OnInitializedAsync()
    {
        var currentWeatherDTO = await WeatherService.GetCurrentWeatherByCityId(CityId);
        currentWeather = currentWeatherDTO.Current;

        // The forecast includes the current date,
        // so we pass one extra and then skip the first one.
        var forecastedWeatherDTO = await WeatherService.GetWeatherForecastByCityId(CityId, days: 4);
        forecastDays = forecastedWeatherDTO.Forecast.ForecastDay.Skip(1);
    }
}