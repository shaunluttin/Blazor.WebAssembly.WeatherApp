@page "/weather/{CityName}/{CityId:int}"
@using System.ComponentModel.DataAnnotations
@using WeatherApp.WebUI.DTOs
@using WeatherApp.WebUI.Services
@inject IWeatherService WeatherService

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

@if (currentWeather == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col"></th>
                <th scope="col">Current</th>
                <th scope="col">1 Day</th>
                <th scope="col">2 Day</th>
                <th scope="col">3 Day</th>
            </tr>
        </thead>
            <tr>
                @* TODO Consider not breaking the Law of Demeter here. *@
                <th scope="col">Fahrenheit</th>
                <td>@currentWeather.Current.Fahrenheit</td>
            </tr>
            <tr>
                <th scope="col">Celsius</th>
                <td>@currentWeather.Current.Celcius</td>
            </tr>
            <tr>
                <th scope="col">Feels Like, Fahrenheit</th>
                <td>@currentWeather.Current.FeelsLikeFahrenheit</td>
            </tr>
            <tr>
                <th scope="col">Feels Like, Celsius</th>
                <td>@currentWeather.Current.FeelsLikeCelcius</td>
            </tr>
            <tr>
                <th scope="col">Humidity</th>
                <td>@currentWeather.Current.Humidity</td>
            </tr>
            <tr>
                <th scope="col">Atmospheric Pressure (MB)</th>
                <td>@currentWeather.Current.AtmosphericPressure</td>
            </tr>
            <tr>
                <th scope="col">Wind Speed (MPH)</th>
                <td>@currentWeather.Current.WindSpeedMph</td>
            </tr>
            <tr>
                <th scope="col">UV Index:</th>
                <td>@currentWeather.Current.UVIndex</td> 
            </tr>
    </table>
}

@code {
    @* We use this one simply to make the URI readably for the end-user. *@
    [Parameter]
    public required string CityName {get; set;}

    @* We use this one to lookup the city from the API. *@
    [Parameter]
    public required int CityId {get; set;}

    private CurrentWeatherDTO? currentWeather;

    private ForecastedWeatherDTO? forecastedWeather;

    protected override async Task OnInitializedAsync()
    {
        currentWeather = await WeatherService.GetCurrentWeatherByCityId(CityId);
        forecastedWeather = await WeatherService.GetWeatherForecastByCityId(CityId, days: 3);
    }
}