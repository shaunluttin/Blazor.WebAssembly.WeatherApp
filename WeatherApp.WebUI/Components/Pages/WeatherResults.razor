@page "/weather/{CityName}/{CityId:int}"
@using System.ComponentModel.DataAnnotations
@using WeatherApp.WebUI.DTOs
@using WeatherApp.WebUI.Services
@inject IWeatherService WeatherService

<PageTitle>Weather for @CityName</PageTitle>

<h1>Weather for @CityName</h1>

@if (currentWeather == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-sm table-bordered table-weather table-weather-current">
        <caption class="caption-top">Current Weather</caption>
        <tbody>
            <tr>
                <th class="th-section table-active" colspan="2" scope="col">Fahrenheit</th>
            </tr>
            <tr>
                <th class="th-nested" scope="col">Temperature</th>
                <td>@currentWeather.Fahrenheit</td>
            </tr>
            <tr>
                <th class="th-nested" scope="col">Feels Like</th>
                <td>@currentWeather.FeelsLikeFahrenheit</td>
            </tr>
            <tr>
                <th class="th-section table-active" colspan="2" scope="col">Celcius</th>
            </tr>
            <tr>
                <th class="th-nested" scope="col">Temperature</th>
                <td>@currentWeather.Celcius</td>
            </tr>
            <tr>
                <th class="th-nested" scope="col">Feels Like</th>
                <td>@currentWeather.FeelsLikeCelcius</td>
            </tr>
            <tr>
                <th class="th-section table-active" colspan="2" scope="col">Other Measures</th>
            </tr>
            <tr>
                <th class="th-nested" scope="col">Humidity (%)</th>
                <td>@currentWeather.Humidity</td>
            </tr>
            <tr>
                <th class="th-nested" scope="col">Atmospheric Pressure (MB)</th>
                <td>@currentWeather.AtmosphericPressure</td>
            </tr>
            <tr>
                <th class="th-nested" scope="col">Wind Speed (MPH)</th>
                <td>@currentWeather.WindSpeedMph</td>
            </tr>
            <tr>
                <th class="th-nested" scope="col">UV Index</th>
                <td>@currentWeather.UVIndex</td> 
            </tr>
        </tbody>
    </table>

    <table class="table table-sm table-bordered table-weather table-weather-forecast">
        <caption class="caption-top">Three Day Forecast</caption>
        <thead>
            <tr>
                <th colspan="2" scope="col"></th>
                @foreach(var forecast in forecastDays) 
                {
                    <th>
                        @(DateTime.Parse(forecast.Date).ToString("dddd d MMM"))
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                <th class="th-section table-active" colspan="5" scope="col">Fahrenheit</th>
            </tr>
            <tr>
                <th class="th-nested" colspan="2" scope="col">Ave</th>
                @foreach(var forecast in forecastDays) 
                {
                    <td>@forecast.Day.AverageFahrenheit</td>
                }
            </tr>
            <tr>
                <th class="th-nested" colspan="2" scope="col">Min</th>
                @foreach(var forecast in forecastDays) 
                {
                    <td>@forecast.Day.MinFahrenheit</td>
                }
            </tr>
            <tr>
                <th class="th-nested" colspan="2" scope="col">Max</th>
                @foreach(var forecast in forecastDays) 
                {
                    <td>@forecast.Day.MaxFahrenheit</td>
                }
            </tr>
            <tr>
                <th class="th-section table-active" colspan="5" scope="col">Celsius</th>
            </tr>
            <tr>
                <th class="th-nested" colspan="2" scope="col">Ave</th>
                @foreach(var forecast in forecastDays) 
                {
                    <td>@forecast.Day.AverageCelcius</td>
                }
            </tr>
            <tr>
                <th class="th-nested" colspan="2" scope="col">Min</th>
                @foreach(var forecast in forecastDays) 
                {
                    <td>@forecast.Day.MinCelcius</td>
                }
            </tr>
            <tr>
                <th class="th-nested" colspan="2" scope="col">Max</th>
                @foreach(var forecast in forecastDays) 
                {
                    <td>@forecast.Day.MaxCelcius</td>
                }
            </tr>
        </tbody>
    </table>
}

@code {
    @* We use this one simply to make the URI readably for the end-user. *@
    [Parameter]
    public required string CityName {get; set;}

    @* We use this one to lookup the city from the API. *@
    [Parameter]
    public required int CityId {get; set;}

    private WeatherDescriptionDTO currentWeather;

    private IEnumerable<ForecastDayDTO> forecastDays;

    protected override async Task OnInitializedAsync()
    {
        var currentWeatherDTO = await WeatherService.GetCurrentWeatherByCityId(CityId);
        currentWeather = currentWeatherDTO.Current;

        // The forecast includes the current date,
        // so we pass one extra and then skip the first one.
        var forecastedWeatherDTO = await WeatherService.GetWeatherForecastByCityId(CityId, days: 4);
        forecastDays = forecastedWeatherDTO.Forecast.ForecastDay.Skip(1);
    }
}